(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){cachedSetTimeout=setTimeout}else{cachedSetTimeout=defaultSetTimout}}catch(e){cachedSetTimeout=defaultSetTimout}try{if(typeof clearTimeout==="function"){cachedClearTimeout=clearTimeout}else{cachedClearTimeout=defaultClearTimeout}}catch(e){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue)}else{queueIndex=-1}if(queue.length){drainQueue()}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run()}}queueIndex=-1;len=queue.length}currentQueue=null;draining=false;runClearTimeout(timeout)}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i]}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue)}};function Item(fun,array){this.fun=fun;this.array=array}Item.prototype.run=function(){this.fun.apply(null,this.array)};process.title="browser";process.browser=true;process.env={};process.argv=[];process.version="";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error("process.binding is not supported")};process.cwd=function(){return"/"};process.chdir=function(dir){throw new Error("process.chdir is not supported")};process.umask=function(){return 0}},{}],2:[function(require,module,exports){module.exports={helpers:require("@turf/helpers"),intersect:require("@turf/intersect").default,centroid:require("@turf/centroid").default}},{"@turf/centroid":3,"@turf/helpers":4,"@turf/intersect":5}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var meta_1=require("@turf/meta");var helpers_1=require("@turf/helpers");function centroid(geojson,options){if(options===void 0){options={}}var xSum=0;var ySum=0;var len=0;meta_1.coordEach(geojson,function(coord){xSum+=coord[0];ySum+=coord[1];len++},true);return helpers_1.point([xSum/len,ySum/len],options.properties)}exports.default=centroid},{"@turf/helpers":4,"@turf/meta":7}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.earthRadius=6371008.8;exports.factors={centimeters:exports.earthRadius*100,centimetres:exports.earthRadius*100,degrees:exports.earthRadius/111325,feet:exports.earthRadius*3.28084,inches:exports.earthRadius*39.37,kilometers:exports.earthRadius/1e3,kilometres:exports.earthRadius/1e3,meters:exports.earthRadius,metres:exports.earthRadius,miles:exports.earthRadius/1609.344,millimeters:exports.earthRadius*1e3,millimetres:exports.earthRadius*1e3,nauticalmiles:exports.earthRadius/1852,radians:1,yards:exports.earthRadius*1.0936};exports.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/exports.earthRadius,yards:1.0936133};exports.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function feature(geom,properties,options){if(options===void 0){options={}}var feat={type:"Feature"};if(options.id===0||options.id){feat.id=options.id}if(options.bbox){feat.bbox=options.bbox}feat.properties=properties||{};feat.geometry=geom;return feat}exports.feature=feature;function geometry(type,coordinates,_options){if(_options===void 0){_options={}}switch(type){case"Point":return point(coordinates).geometry;case"LineString":return lineString(coordinates).geometry;case"Polygon":return polygon(coordinates).geometry;case"MultiPoint":return multiPoint(coordinates).geometry;case"MultiLineString":return multiLineString(coordinates).geometry;case"MultiPolygon":return multiPolygon(coordinates).geometry;default:throw new Error(type+" is invalid")}}exports.geometry=geometry;function point(coordinates,properties,options){if(options===void 0){options={}}if(!coordinates){throw new Error("coordinates is required")}if(!Array.isArray(coordinates)){throw new Error("coordinates must be an Array")}if(coordinates.length<2){throw new Error("coordinates must be at least 2 numbers long")}if(!isNumber(coordinates[0])||!isNumber(coordinates[1])){throw new Error("coordinates must contain numbers")}var geom={type:"Point",coordinates:coordinates};return feature(geom,properties,options)}exports.point=point;function points(coordinates,properties,options){if(options===void 0){options={}}return featureCollection(coordinates.map(function(coords){return point(coords,properties)}),options)}exports.points=points;function polygon(coordinates,properties,options){if(options===void 0){options={}}for(var _i=0,coordinates_1=coordinates;_i<coordinates_1.length;_i++){var ring=coordinates_1[_i];if(ring.length<4){throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.")}for(var j=0;j<ring[ring.length-1].length;j++){if(ring[ring.length-1][j]!==ring[0][j]){throw new Error("First and last Position are not equivalent.")}}}var geom={type:"Polygon",coordinates:coordinates};return feature(geom,properties,options)}exports.polygon=polygon;function polygons(coordinates,properties,options){if(options===void 0){options={}}return featureCollection(coordinates.map(function(coords){return polygon(coords,properties)}),options)}exports.polygons=polygons;function lineString(coordinates,properties,options){if(options===void 0){options={}}if(coordinates.length<2){throw new Error("coordinates must be an array of two or more positions")}var geom={type:"LineString",coordinates:coordinates};return feature(geom,properties,options)}exports.lineString=lineString;function lineStrings(coordinates,properties,options){if(options===void 0){options={}}return featureCollection(coordinates.map(function(coords){return lineString(coords,properties)}),options)}exports.lineStrings=lineStrings;function featureCollection(features,options){if(options===void 0){options={}}var fc={type:"FeatureCollection"};if(options.id){fc.id=options.id}if(options.bbox){fc.bbox=options.bbox}fc.features=features;return fc}exports.featureCollection=featureCollection;function multiLineString(coordinates,properties,options){if(options===void 0){options={}}var geom={type:"MultiLineString",coordinates:coordinates};return feature(geom,properties,options)}exports.multiLineString=multiLineString;function multiPoint(coordinates,properties,options){if(options===void 0){options={}}var geom={type:"MultiPoint",coordinates:coordinates};return feature(geom,properties,options)}exports.multiPoint=multiPoint;function multiPolygon(coordinates,properties,options){if(options===void 0){options={}}var geom={type:"MultiPolygon",coordinates:coordinates};return feature(geom,properties,options)}exports.multiPolygon=multiPolygon;function geometryCollection(geometries,properties,options){if(options===void 0){options={}}var geom={type:"GeometryCollection",geometries:geometries};return feature(geom,properties,options)}exports.geometryCollection=geometryCollection;function round(num,precision){if(precision===void 0){precision=0}if(precision&&!(precision>=0)){throw new Error("precision must be a positive number")}var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier}exports.round=round;function radiansToLength(radians,units){if(units===void 0){units="kilometers"}var factor=exports.factors[units];if(!factor){throw new Error(units+" units is invalid")}return radians*factor}exports.radiansToLength=radiansToLength;function lengthToRadians(distance,units){if(units===void 0){units="kilometers"}var factor=exports.factors[units];if(!factor){throw new Error(units+" units is invalid")}return distance/factor}exports.lengthToRadians=lengthToRadians;function lengthToDegrees(distance,units){return radiansToDegrees(lengthToRadians(distance,units))}exports.lengthToDegrees=lengthToDegrees;function bearingToAzimuth(bearing){var angle=bearing%360;if(angle<0){angle+=360}return angle}exports.bearingToAzimuth=bearingToAzimuth;function radiansToDegrees(radians){var degrees=radians%(2*Math.PI);return degrees*180/Math.PI}exports.radiansToDegrees=radiansToDegrees;function degreesToRadians(degrees){var radians=degrees%360;return radians*Math.PI/180}exports.degreesToRadians=degreesToRadians;function convertLength(length,originalUnit,finalUnit){if(originalUnit===void 0){originalUnit="kilometers"}if(finalUnit===void 0){finalUnit="kilometers"}if(!(length>=0)){throw new Error("length must be a positive number")}return radiansToLength(lengthToRadians(length,originalUnit),finalUnit)}exports.convertLength=convertLength;function convertArea(area,originalUnit,finalUnit){if(originalUnit===void 0){originalUnit="meters"}if(finalUnit===void 0){finalUnit="kilometers"}if(!(area>=0)){throw new Error("area must be a positive number")}var startFactor=exports.areaFactors[originalUnit];if(!startFactor){throw new Error("invalid original units")}var finalFactor=exports.areaFactors[finalUnit];if(!finalFactor){throw new Error("invalid final units")}return area/startFactor*finalFactor}exports.convertArea=convertArea;function isNumber(num){return!isNaN(num)&&num!==null&&!Array.isArray(num)}exports.isNumber=isNumber;function isObject(input){return!!input&&input.constructor===Object}exports.isObject=isObject;function validateBBox(bbox){if(!bbox){throw new Error("bbox is required")}if(!Array.isArray(bbox)){throw new Error("bbox must be an Array")}if(bbox.length!==4&&bbox.length!==6){throw new Error("bbox must be an Array of 4 or 6 numbers")}bbox.forEach(function(num){if(!isNumber(num)){throw new Error("bbox must only contain numbers")}})}exports.validateBBox=validateBBox;function validateId(id){if(!id){throw new Error("id is required")}if(["string","number"].indexOf(typeof id)===-1){throw new Error("id must be a number or a string")}}exports.validateId=validateId},{}],5:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});var helpers_1=require("@turf/helpers");var invariant_1=require("@turf/invariant");var polygon_clipping_1=__importDefault(require("polygon-clipping"));function intersect(poly1,poly2,options){if(options===void 0){options={}}var geom1=invariant_1.getGeom(poly1);var geom2=invariant_1.getGeom(poly2);var intersection=polygon_clipping_1.default.intersection(geom1.coordinates,geom2.coordinates);if(intersection.length===0)return null;if(intersection.length===1)return helpers_1.polygon(intersection[0],options.properties);return helpers_1.multiPolygon(intersection,options.properties)}exports.default=intersect},{"@turf/helpers":4,"@turf/invariant":6,"polygon-clipping":8}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var helpers_1=require("@turf/helpers");function getCoord(coord){if(!coord){throw new Error("coord is required")}if(!Array.isArray(coord)){if(coord.type==="Feature"&&coord.geometry!==null&&coord.geometry.type==="Point"){return coord.geometry.coordinates}if(coord.type==="Point"){return coord.coordinates}}if(Array.isArray(coord)&&coord.length>=2&&!Array.isArray(coord[0])&&!Array.isArray(coord[1])){return coord}throw new Error("coord must be GeoJSON Point or an Array of numbers")}exports.getCoord=getCoord;function getCoords(coords){if(Array.isArray(coords)){return coords}if(coords.type==="Feature"){if(coords.geometry!==null){return coords.geometry.coordinates}}else{if(coords.coordinates){return coords.coordinates}}throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}exports.getCoords=getCoords;function containsNumber(coordinates){if(coordinates.length>1&&helpers_1.isNumber(coordinates[0])&&helpers_1.isNumber(coordinates[1])){return true}if(Array.isArray(coordinates[0])&&coordinates[0].length){return containsNumber(coordinates[0])}throw new Error("coordinates must only contain numbers")}exports.containsNumber=containsNumber;function geojsonType(value,type,name){if(!type||!name){throw new Error("type and name required")}if(!value||value.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+value.type)}}exports.geojsonType=geojsonType;function featureOf(feature,type,name){if(!feature){throw new Error("No feature passed")}if(!name){throw new Error(".featureOf() requires a name")}if(!feature||feature.type!=="Feature"||!feature.geometry){throw new Error("Invalid input to "+name+", Feature with geometry required")}if(!feature.geometry||feature.geometry.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}}exports.featureOf=featureOf;function collectionOf(featureCollection,type,name){if(!featureCollection){throw new Error("No featureCollection passed")}if(!name){throw new Error(".collectionOf() requires a name")}if(!featureCollection||featureCollection.type!=="FeatureCollection"){throw new Error("Invalid input to "+name+", FeatureCollection required")}for(var _i=0,_a=featureCollection.features;_i<_a.length;_i++){var feature=_a[_i];if(!feature||feature.type!=="Feature"||!feature.geometry){throw new Error("Invalid input to "+name+", Feature with geometry required")}if(!feature.geometry||feature.geometry.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}}}exports.collectionOf=collectionOf;function getGeom(geojson){if(geojson.type==="Feature"){return geojson.geometry}return geojson}exports.getGeom=getGeom;function getType(geojson,_name){if(geojson.type==="FeatureCollection"){return"FeatureCollection"}if(geojson.type==="GeometryCollection"){return"GeometryCollection"}if(geojson.type==="Feature"&&geojson.geometry!==null){return geojson.geometry.type}return geojson.type}exports.getType=getType},{"@turf/helpers":4}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var helpers=require("@turf/helpers");function coordEach(geojson,callback,excludeWrapCoord){if(geojson===null)return;var j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink=0,coordIndex=0,isGeometryCollection,type=geojson.type,isFeatureCollection=type==="FeatureCollection",isFeature=type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(var featureIndex=0;featureIndex<stop;featureIndex++){geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(var geomIndex=0;geomIndex<stopG;geomIndex++){var multiFeatureIndex=0;var geometryIndex=0;geometry=isGeometryCollection?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection;if(geometry===null)continue;coords=geometry.coordinates;var geomType=geometry.type;wrapShrink=excludeWrapCoord&&(geomType==="Polygon"||geomType==="MultiPolygon")?1:0;switch(geomType){case null:break;case"Point":if(callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++;multiFeatureIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){if(callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++;if(geomType==="MultiPoint")multiFeatureIndex++}if(geomType==="LineString")multiFeatureIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){if(callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++}if(geomType==="MultiLineString")multiFeatureIndex++;if(geomType==="Polygon")geometryIndex++}if(geomType==="Polygon")multiFeatureIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){geometryIndex=0;for(k=0;k<coords[j].length;k++){for(l=0;l<coords[j][k].length-wrapShrink;l++){if(callback(coords[j][k][l],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++}geometryIndex++}multiFeatureIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(coordEach(geometry.geometries[j],callback,excludeWrapCoord)===false)return false;break;default:throw new Error("Unknown Geometry Type")}}}}function coordReduce(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;coordEach(geojson,function(currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex){if(coordIndex===0&&initialValue===undefined)previousValue=currentCoord;else previousValue=callback(previousValue,currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)},excludeWrapCoord);return previousValue}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length;i++){if(callback(geojson.features[i].properties,i)===false)break}break;case"Feature":callback(geojson.properties,0);break}}function propReduce(geojson,callback,initialValue){var previousValue=initialValue;propEach(geojson,function(currentProperties,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentProperties;else previousValue=callback(previousValue,currentProperties,featureIndex)});return previousValue}function featureEach(geojson,callback){if(geojson.type==="Feature"){callback(geojson,0)}else if(geojson.type==="FeatureCollection"){for(var i=0;i<geojson.features.length;i++){if(callback(geojson.features[i],i)===false)break}}}function featureReduce(geojson,callback,initialValue){var previousValue=initialValue;featureEach(geojson,function(currentFeature,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex)});return previousValue}function coordAll(geojson){var coords=[];coordEach(geojson,function(coord){coords.push(coord)});return coords}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection=geojson.type==="FeatureCollection",isFeature=geojson.type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson;featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{};featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:undefined;featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:undefined;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(g=0;g<stopG;g++){geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if(geometry===null){if(callback(null,featureIndex,featureProperties,featureBBox,featureId)===false)return false;continue}switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(callback(geometry,featureIndex,featureProperties,featureBBox,featureId)===false)return false;break}case"GeometryCollection":{for(j=0;j<geometry.geometries.length;j++){if(callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId)===false)return false}break}default:throw new Error("Unknown Geometry Type")}}featureIndex++}}function geomReduce(geojson,callback,initialValue){var previousValue=initialValue;geomEach(geojson,function(currentGeometry,featureIndex,featureProperties,featureBBox,featureId){if(featureIndex===0&&initialValue===undefined)previousValue=currentGeometry;else previousValue=callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId)});return previousValue}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties,bbox,id){var type=geometry===null?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":if(callback(helpers.feature(geometry,properties,{bbox:bbox,id:id}),featureIndex,0)===false)return false;return}var geomType;switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon";break}for(var multiFeatureIndex=0;multiFeatureIndex<geometry.coordinates.length;multiFeatureIndex++){var coordinate=geometry.coordinates[multiFeatureIndex];var geom={type:geomType,coordinates:coordinate};if(callback(helpers.feature(geom,properties),featureIndex,multiFeatureIndex)===false)return false}})}function flattenReduce(geojson,callback,initialValue){var previousValue=initialValue;flattenEach(geojson,function(currentFeature,featureIndex,multiFeatureIndex){if(featureIndex===0&&multiFeatureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex,multiFeatureIndex)});return previousValue}function segmentEach(geojson,callback){flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){var segmentIndex=0;if(!feature.geometry)return;var type=feature.geometry.type;if(type==="Point"||type==="MultiPoint")return;var previousCoords;var previousFeatureIndex=0;var previousMultiIndex=0;var prevGeomIndex=0;if(coordEach(feature,function(currentCoord,coordIndex,featureIndexCoord,multiPartIndexCoord,geometryIndex){if(previousCoords===undefined||featureIndex>previousFeatureIndex||multiPartIndexCoord>previousMultiIndex||geometryIndex>prevGeomIndex){previousCoords=currentCoord;previousFeatureIndex=featureIndex;previousMultiIndex=multiPartIndexCoord;prevGeomIndex=geometryIndex;segmentIndex=0;return}var currentSegment=helpers.lineString([previousCoords,currentCoord],feature.properties);if(callback(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex)===false)return false;segmentIndex++;previousCoords=currentCoord})===false)return false})}function segmentReduce(geojson,callback,initialValue){var previousValue=initialValue;var started=false;segmentEach(geojson,function(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex){if(started===false&&initialValue===undefined)previousValue=currentSegment;else previousValue=callback(previousValue,currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex);started=true});return previousValue}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){if(feature.geometry===null)return;var type=feature.geometry.type;var coords=feature.geometry.coordinates;switch(type){case"LineString":if(callback(feature,featureIndex,multiFeatureIndex,0,0)===false)return false;break;case"Polygon":for(var geometryIndex=0;geometryIndex<coords.length;geometryIndex++){if(callback(helpers.lineString(coords[geometryIndex],feature.properties),featureIndex,multiFeatureIndex,geometryIndex)===false)return false}break}})}function lineReduce(geojson,callback,initialValue){var previousValue=initialValue;lineEach(geojson,function(currentLine,featureIndex,multiFeatureIndex,geometryIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentLine;else previousValue=callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex)});return previousValue}function findSegment(geojson,options){options=options||{};if(!helpers.isObject(options))throw new Error("options is invalid");var featureIndex=options.featureIndex||0;var multiFeatureIndex=options.multiFeatureIndex||0;var geometryIndex=options.geometryIndex||0;var segmentIndex=options.segmentIndex||0;var properties=options.properties;var geometry;switch(geojson.type){case"FeatureCollection":if(featureIndex<0)featureIndex=geojson.features.length+featureIndex;properties=properties||geojson.features[featureIndex].properties;geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties;geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(geometry===null)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":case"MultiPoint":return null;case"LineString":if(segmentIndex<0)segmentIndex=coords.length+segmentIndex-1;return helpers.lineString([coords[segmentIndex],coords[segmentIndex+1]],properties,options);case"Polygon":if(geometryIndex<0)geometryIndex=coords.length+geometryIndex;if(segmentIndex<0)segmentIndex=coords[geometryIndex].length+segmentIndex-1;return helpers.lineString([coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex+1]],properties,options);case"MultiLineString":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(segmentIndex<0)segmentIndex=coords[multiFeatureIndex].length+segmentIndex-1;return helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex+1]],properties,options);case"MultiPolygon":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(geometryIndex<0)geometryIndex=coords[multiFeatureIndex].length+geometryIndex;if(segmentIndex<0)segmentIndex=coords[multiFeatureIndex][geometryIndex].length-segmentIndex-1;return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex],coords[multiFeatureIndex][geometryIndex][segmentIndex+1]],properties,options)}throw new Error("geojson is invalid")}function findPoint(geojson,options){options=options||{};if(!helpers.isObject(options))throw new Error("options is invalid");var featureIndex=options.featureIndex||0;var multiFeatureIndex=options.multiFeatureIndex||0;var geometryIndex=options.geometryIndex||0;var coordIndex=options.coordIndex||0;var properties=options.properties;var geometry;switch(geojson.type){case"FeatureCollection":if(featureIndex<0)featureIndex=geojson.features.length+featureIndex;properties=properties||geojson.features[featureIndex].properties;geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties;geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(geometry===null)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":return helpers.point(coords,properties,options);case"MultiPoint":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;return helpers.point(coords[multiFeatureIndex],properties,options);case"LineString":if(coordIndex<0)coordIndex=coords.length+coordIndex;return helpers.point(coords[coordIndex],properties,options);case"Polygon":if(geometryIndex<0)geometryIndex=coords.length+geometryIndex;if(coordIndex<0)coordIndex=coords[geometryIndex].length+coordIndex;return helpers.point(coords[geometryIndex][coordIndex],properties,options);case"MultiLineString":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(coordIndex<0)coordIndex=coords[multiFeatureIndex].length+coordIndex;return helpers.point(coords[multiFeatureIndex][coordIndex],properties,options);case"MultiPolygon":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(geometryIndex<0)geometryIndex=coords[multiFeatureIndex].length+geometryIndex;if(coordIndex<0)coordIndex=coords[multiFeatureIndex][geometryIndex].length-coordIndex;return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options)}throw new Error("geojson is invalid")}exports.coordAll=coordAll;exports.coordEach=coordEach;exports.coordReduce=coordReduce;exports.featureEach=featureEach;exports.featureReduce=featureReduce;exports.findPoint=findPoint;exports.findSegment=findSegment;exports.flattenEach=flattenEach;exports.flattenReduce=flattenReduce;exports.geomEach=geomEach;exports.geomReduce=geomReduce;exports.lineEach=lineEach;exports.lineReduce=lineReduce;exports.propEach=propEach;exports.propReduce=propReduce;exports.segmentEach=segmentEach;exports.segmentReduce=segmentReduce},{"@turf/helpers":4}],8:[function(require,module,exports){(function(process){(function(){(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=typeof globalThis!=="undefined"?globalThis:global||self,global.polygonClipping=factory())})(this,function(){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var Node=function(){function Node(key,data){this.next=null;this.key=key;this.data=data;this.left=null;this.right=null}return Node}();function DEFAULT_COMPARE(a,b){return a>b?1:a<b?-1:0}function splay(i,t,comparator){var N=new Node(null,null);var l=N;var r=N;while(true){var cmp=comparator(i,t.key);if(cmp<0){if(t.left===null)break;if(comparator(i,t.left.key)<0){var y=t.left;t.left=y.right;y.right=t;t=y;if(t.left===null)break}r.left=t;r=t;t=t.left}else if(cmp>0){if(t.right===null)break;if(comparator(i,t.right.key)>0){var y=t.right;t.right=y.left;y.left=t;t=y;if(t.right===null)break}l.right=t;l=t;t=t.right}else break}l.right=t.left;r.left=t.right;t.left=N.right;t.right=N.left;return t}function insert(i,data,t,comparator){var node=new Node(i,data);if(t===null){node.left=node.right=null;return node}t=splay(i,t,comparator);var cmp=comparator(i,t.key);if(cmp<0){node.left=t.left;node.right=t;t.left=null}else if(cmp>=0){node.right=t.right;node.left=t;t.right=null}return node}function split(key,v,comparator){var left=null;var right=null;if(v){v=splay(key,v,comparator);var cmp=comparator(v.key,key);if(cmp===0){left=v.left;right=v.right}else if(cmp<0){right=v.right;v.right=null;left=v}else{left=v.left;v.left=null;right=v}}return{left:left,right:right}}function merge(left,right,comparator){if(right===null)return left;if(left===null)return right;right=splay(left.key,right,comparator);right.left=left;return right}function printRow(root,prefix,isTail,out,printNode){if(root){out(""+prefix+(isTail?"└── ":"├── ")+printNode(root)+"\n");var indent=prefix+(isTail?"    ":"│   ");if(root.left)printRow(root.left,indent,false,out,printNode);if(root.right)printRow(root.right,indent,true,out,printNode)}}var Tree=function(){function Tree(comparator){if(comparator===void 0){comparator=DEFAULT_COMPARE}this._root=null;this._size=0;this._comparator=comparator}Tree.prototype.insert=function(key,data){this._size++;return this._root=insert(key,data,this._root,this._comparator)};Tree.prototype.add=function(key,data){var node=new Node(key,data);if(this._root===null){node.left=node.right=null;this._size++;this._root=node}var comparator=this._comparator;var t=splay(key,this._root,comparator);var cmp=comparator(key,t.key);if(cmp===0)this._root=t;else{if(cmp<0){node.left=t.left;node.right=t;t.left=null}else if(cmp>0){node.right=t.right;node.left=t;t.right=null}this._size++;this._root=node}return this._root};Tree.prototype.remove=function(key){this._root=this._remove(key,this._root,this._comparator)};Tree.prototype._remove=function(i,t,comparator){var x;if(t===null)return null;t=splay(i,t,comparator);var cmp=comparator(i,t.key);if(cmp===0){if(t.left===null){x=t.right}else{x=splay(i,t.left,comparator);x.right=t.right}this._size--;return x}return t};Tree.prototype.pop=function(){var node=this._root;if(node){while(node.left){node=node.left}this._root=splay(node.key,this._root,this._comparator);this._root=this._remove(node.key,this._root,this._comparator);return{key:node.key,data:node.data}}return null};Tree.prototype.findStatic=function(key){var current=this._root;var compare=this._comparator;while(current){var cmp=compare(key,current.key);if(cmp===0)return current;else if(cmp<0)current=current.left;else current=current.right}return null};Tree.prototype.find=function(key){if(this._root){this._root=splay(key,this._root,this._comparator);if(this._comparator(key,this._root.key)!==0)return null}return this._root};Tree.prototype.contains=function(key){var current=this._root;var compare=this._comparator;while(current){var cmp=compare(key,current.key);if(cmp===0)return true;else if(cmp<0)current=current.left;else current=current.right}return false};Tree.prototype.forEach=function(visitor,ctx){var current=this._root;var Q=[];var done=false;while(!done){if(current!==null){Q.push(current);current=current.left}else{if(Q.length!==0){current=Q.pop();visitor.call(ctx,current);current=current.right}else done=true}}return this};Tree.prototype.range=function(low,high,fn,ctx){var Q=[];var compare=this._comparator;var node=this._root;var cmp;while(Q.length!==0||node){if(node){Q.push(node);node=node.left}else{node=Q.pop();cmp=compare(node.key,high);if(cmp>0){break}else if(compare(node.key,low)>=0){if(fn.call(ctx,node))return this}node=node.right}}return this};Tree.prototype.keys=function(){var keys=[];this.forEach(function(_a){var key=_a.key;return keys.push(key)});return keys};Tree.prototype.values=function(){var values=[];this.forEach(function(_a){var data=_a.data;return values.push(data)});return values};Tree.prototype.min=function(){if(this._root)return this.minNode(this._root).key;return null};Tree.prototype.max=function(){if(this._root)return this.maxNode(this._root).key;return null};Tree.prototype.minNode=function(t){if(t===void 0){t=this._root}if(t)while(t.left){t=t.left}return t};Tree.prototype.maxNode=function(t){if(t===void 0){t=this._root}if(t)while(t.right){t=t.right}return t};Tree.prototype.at=function(index){var current=this._root;var done=false;var i=0;var Q=[];while(!done){if(current){Q.push(current);current=current.left}else{if(Q.length>0){current=Q.pop();if(i===index)return current;i++;current=current.right}else done=true}}return null};Tree.prototype.next=function(d){var root=this._root;var successor=null;if(d.right){successor=d.right;while(successor.left){successor=successor.left}return successor}var comparator=this._comparator;while(root){var cmp=comparator(d.key,root.key);if(cmp===0)break;else if(cmp<0){successor=root;root=root.left}else root=root.right}return successor};Tree.prototype.prev=function(d){var root=this._root;var predecessor=null;if(d.left!==null){predecessor=d.left;while(predecessor.right){predecessor=predecessor.right}return predecessor}var comparator=this._comparator;while(root){var cmp=comparator(d.key,root.key);if(cmp===0)break;else if(cmp<0)root=root.left;else{predecessor=root;root=root.right}}return predecessor};Tree.prototype.clear=function(){this._root=null;this._size=0;return this};Tree.prototype.toList=function(){return toList(this._root)};Tree.prototype.load=function(keys,values,presort){if(values===void 0){values=[]}if(presort===void 0){presort=false}var size=keys.length;var comparator=this._comparator;if(presort)sort(keys,values,0,size-1,comparator);if(this._root===null){this._root=loadRecursive(keys,values,0,size);this._size=size}else{var mergedList=mergeLists(this.toList(),createList(keys,values),comparator);size=this._size+size;this._root=sortedListToBST({head:mergedList},0,size)}return this};Tree.prototype.isEmpty=function(){return this._root===null};Object.defineProperty(Tree.prototype,"size",{get:function get(){return this._size},enumerable:true,configurable:true});Object.defineProperty(Tree.prototype,"root",{get:function get(){return this._root},enumerable:true,configurable:true});Tree.prototype.toString=function(printNode){if(printNode===void 0){printNode=function printNode(n){return String(n.key)}}var out=[];printRow(this._root,"",true,function(v){return out.push(v)},printNode);return out.join("")};Tree.prototype.update=function(key,newKey,newData){var comparator=this._comparator;var _a=split(key,this._root,comparator),left=_a.left,right=_a.right;if(comparator(key,newKey)<0){right=insert(newKey,newData,right,comparator)}else{left=insert(newKey,newData,left,comparator)}this._root=merge(left,right,comparator)};Tree.prototype.split=function(key){return split(key,this._root,this._comparator)};return Tree}();function loadRecursive(keys,values,start,end){var size=end-start;if(size>0){var middle=start+Math.floor(size/2);var key=keys[middle];var data=values[middle];var node=new Node(key,data);node.left=loadRecursive(keys,values,start,middle);node.right=loadRecursive(keys,values,middle+1,end);return node}return null}function createList(keys,values){var head=new Node(null,null);var p=head;for(var i=0;i<keys.length;i++){p=p.next=new Node(keys[i],values[i])}p.next=null;return head.next}function toList(root){var current=root;var Q=[];var done=false;var head=new Node(null,null);var p=head;while(!done){if(current){Q.push(current);current=current.left}else{if(Q.length>0){current=p=p.next=Q.pop();current=current.right}else done=true}}p.next=null;return head.next}function sortedListToBST(list,start,end){var size=end-start;if(size>0){var middle=start+Math.floor(size/2);var left=sortedListToBST(list,start,middle);var root=list.head;root.left=left;list.head=list.head.next;root.right=sortedListToBST(list,middle+1,end);return root}return null}function mergeLists(l1,l2,compare){var head=new Node(null,null);var p=head;var p1=l1;var p2=l2;while(p1!==null&&p2!==null){if(compare(p1.key,p2.key)<0){p.next=p1;p1=p1.next}else{p.next=p2;p2=p2.next}p=p.next}if(p1!==null){p.next=p1}else if(p2!==null){p.next=p2}return head.next}function sort(keys,values,left,right,compare){if(left>=right)return;var pivot=keys[left+right>>1];var i=left-1;var j=right+1;while(true){do{i++}while(compare(keys[i],pivot)<0);do{j--}while(compare(keys[j],pivot)>0);if(i>=j)break;var tmp=keys[i];keys[i]=keys[j];keys[j]=tmp;tmp=values[i];values[i]=values[j];values[j]=tmp}sort(keys,values,left,j,compare);sort(keys,values,j+1,right,compare)}var isInBbox=function isInBbox(bbox,point){return bbox.ll.x<=point.x&&point.x<=bbox.ur.x&&bbox.ll.y<=point.y&&point.y<=bbox.ur.y};var getBboxOverlap=function getBboxOverlap(b1,b2){if(b2.ur.x<b1.ll.x||b1.ur.x<b2.ll.x||b2.ur.y<b1.ll.y||b1.ur.y<b2.ll.y)return null;var lowerX=b1.ll.x<b2.ll.x?b2.ll.x:b1.ll.x;var upperX=b1.ur.x<b2.ur.x?b1.ur.x:b2.ur.x;var lowerY=b1.ll.y<b2.ll.y?b2.ll.y:b1.ll.y;var upperY=b1.ur.y<b2.ur.y?b1.ur.y:b2.ur.y;return{ll:{x:lowerX,y:lowerY},ur:{x:upperX,y:upperY}}};var epsilon=Number.EPSILON;if(epsilon===undefined)epsilon=Math.pow(2,-52);var EPSILON_SQ=epsilon*epsilon;var cmp=function cmp(a,b){if(-epsilon<a&&a<epsilon){if(-epsilon<b&&b<epsilon){return 0}}var ab=a-b;if(ab*ab<EPSILON_SQ*a*b){return 0}return a<b?-1:1};var PtRounder=function(){function PtRounder(){_classCallCheck(this,PtRounder);this.reset()}_createClass(PtRounder,[{key:"reset",value:function reset(){this.xRounder=new CoordRounder;this.yRounder=new CoordRounder}},{key:"round",value:function round(x,y){return{x:this.xRounder.round(x),y:this.yRounder.round(y)}}}]);return PtRounder}();var CoordRounder=function(){function CoordRounder(){_classCallCheck(this,CoordRounder);this.tree=new Tree;this.round(0)}_createClass(CoordRounder,[{key:"round",value:function round(coord){var node=this.tree.add(coord);var prevNode=this.tree.prev(node);if(prevNode!==null&&cmp(node.key,prevNode.key)===0){this.tree.remove(coord);return prevNode.key}var nextNode=this.tree.next(node);if(nextNode!==null&&cmp(node.key,nextNode.key)===0){this.tree.remove(coord);return nextNode.key}return coord}}]);return CoordRounder}();var rounder=new PtRounder;var crossProduct=function crossProduct(a,b){return a.x*b.y-a.y*b.x};var dotProduct=function dotProduct(a,b){return a.x*b.x+a.y*b.y};var compareVectorAngles=function compareVectorAngles(basePt,endPt1,endPt2){var v1={x:endPt1.x-basePt.x,y:endPt1.y-basePt.y};var v2={x:endPt2.x-basePt.x,y:endPt2.y-basePt.y};var kross=crossProduct(v1,v2);return cmp(kross,0)};var length=function length(v){return Math.sqrt(dotProduct(v,v))};var sineOfAngle=function sineOfAngle(pShared,pBase,pAngle){var vBase={x:pBase.x-pShared.x,y:pBase.y-pShared.y};var vAngle={x:pAngle.x-pShared.x,y:pAngle.y-pShared.y};return crossProduct(vAngle,vBase)/length(vAngle)/length(vBase)};var cosineOfAngle=function cosineOfAngle(pShared,pBase,pAngle){var vBase={x:pBase.x-pShared.x,y:pBase.y-pShared.y};var vAngle={x:pAngle.x-pShared.x,y:pAngle.y-pShared.y};return dotProduct(vAngle,vBase)/length(vAngle)/length(vBase)};var horizontalIntersection=function horizontalIntersection(pt,v,y){if(v.y===0)return null;return{x:pt.x+v.x/v.y*(y-pt.y),y:y}};var verticalIntersection=function verticalIntersection(pt,v,x){if(v.x===0)return null;return{x:x,y:pt.y+v.y/v.x*(x-pt.x)}};var intersection=function intersection(pt1,v1,pt2,v2){if(v1.x===0)return verticalIntersection(pt2,v2,pt1.x);if(v2.x===0)return verticalIntersection(pt1,v1,pt2.x);if(v1.y===0)return horizontalIntersection(pt2,v2,pt1.y);if(v2.y===0)return horizontalIntersection(pt1,v1,pt2.y);var kross=crossProduct(v1,v2);if(kross==0)return null;var ve={x:pt2.x-pt1.x,y:pt2.y-pt1.y};var d1=crossProduct(ve,v1)/kross;var d2=crossProduct(ve,v2)/kross;var x1=pt1.x+d2*v1.x,x2=pt2.x+d1*v2.x;var y1=pt1.y+d2*v1.y,y2=pt2.y+d1*v2.y;var x=(x1+x2)/2;var y=(y1+y2)/2;return{x:x,y:y}};var SweepEvent=function(){_createClass(SweepEvent,null,[{key:"compare",value:function compare(a,b){var ptCmp=SweepEvent.comparePoints(a.point,b.point);if(ptCmp!==0)return ptCmp;if(a.point!==b.point)a.link(b);if(a.isLeft!==b.isLeft)return a.isLeft?1:-1;return Segment.compare(a.segment,b.segment)}},{key:"comparePoints",value:function comparePoints(aPt,bPt){if(aPt.x<bPt.x)return-1;if(aPt.x>bPt.x)return 1;if(aPt.y<bPt.y)return-1;if(aPt.y>bPt.y)return 1;return 0}}]);function SweepEvent(point,isLeft){_classCallCheck(this,SweepEvent);if(point.events===undefined)point.events=[this];else point.events.push(this);this.point=point;this.isLeft=isLeft}_createClass(SweepEvent,[{key:"link",value:function link(other){if(other.point===this.point){throw new Error("Tried to link already linked events")}var otherEvents=other.point.events;for(var i=0,iMax=otherEvents.length;i<iMax;i++){var evt=otherEvents[i];this.point.events.push(evt);evt.point=this.point}this.checkForConsuming()}},{key:"checkForConsuming",value:function checkForConsuming(){var numEvents=this.point.events.length;for(var i=0;i<numEvents;i++){var evt1=this.point.events[i];if(evt1.segment.consumedBy!==undefined)continue;for(var j=i+1;j<numEvents;j++){var evt2=this.point.events[j];if(evt2.consumedBy!==undefined)continue;if(evt1.otherSE.point.events!==evt2.otherSE.point.events)continue;evt1.segment.consume(evt2.segment)}}}},{key:"getAvailableLinkedEvents",value:function getAvailableLinkedEvents(){var events=[];for(var i=0,iMax=this.point.events.length;i<iMax;i++){var evt=this.point.events[i];if(evt!==this&&!evt.segment.ringOut&&evt.segment.isInResult()){events.push(evt)}}return events}},{key:"getLeftmostComparator",value:function getLeftmostComparator(baseEvent){var _this=this;var cache=new Map;var fillCache=function fillCache(linkedEvent){var nextEvent=linkedEvent.otherSE;cache.set(linkedEvent,{sine:sineOfAngle(_this.point,baseEvent.point,nextEvent.point),cosine:cosineOfAngle(_this.point,baseEvent.point,nextEvent.point)})};return function(a,b){if(!cache.has(a))fillCache(a);if(!cache.has(b))fillCache(b);var _cache$get=cache.get(a),asine=_cache$get.sine,acosine=_cache$get.cosine;var _cache$get2=cache.get(b),bsine=_cache$get2.sine,bcosine=_cache$get2.cosine;if(asine>=0&&bsine>=0){if(acosine<bcosine)return 1;if(acosine>bcosine)return-1;return 0}if(asine<0&&bsine<0){if(acosine<bcosine)return-1;if(acosine>bcosine)return 1;return 0}if(bsine<asine)return-1;if(bsine>asine)return 1;return 0}}}]);return SweepEvent}();var segmentId=0;var Segment=function(){_createClass(Segment,null,[{key:"compare",value:function compare(a,b){var alx=a.leftSE.point.x;var blx=b.leftSE.point.x;var arx=a.rightSE.point.x;var brx=b.rightSE.point.x;if(brx<alx)return 1;if(arx<blx)return-1;var aly=a.leftSE.point.y;var bly=b.leftSE.point.y;var ary=a.rightSE.point.y;var bry=b.rightSE.point.y;if(alx<blx){if(bly<aly&&bly<ary)return 1;if(bly>aly&&bly>ary)return-1;var aCmpBLeft=a.comparePoint(b.leftSE.point);if(aCmpBLeft<0)return 1;if(aCmpBLeft>0)return-1;var bCmpARight=b.comparePoint(a.rightSE.point);if(bCmpARight!==0)return bCmpARight;return-1}if(alx>blx){if(aly<bly&&aly<bry)return-1;if(aly>bly&&aly>bry)return 1;var bCmpALeft=b.comparePoint(a.leftSE.point);if(bCmpALeft!==0)return bCmpALeft;var aCmpBRight=a.comparePoint(b.rightSE.point);if(aCmpBRight<0)return 1;if(aCmpBRight>0)return-1;return 1}if(aly<bly)return-1;if(aly>bly)return 1;if(arx<brx){var _bCmpARight=b.comparePoint(a.rightSE.point);if(_bCmpARight!==0)return _bCmpARight}if(arx>brx){var _aCmpBRight=a.comparePoint(b.rightSE.point);if(_aCmpBRight<0)return 1;if(_aCmpBRight>0)return-1}if(arx!==brx){var ay=ary-aly;var ax=arx-alx;var by=bry-bly;var bx=brx-blx;if(ay>ax&&by<bx)return 1;if(ay<ax&&by>bx)return-1}if(arx>brx)return 1;if(arx<brx)return-1;if(ary<bry)return-1;if(ary>bry)return 1;if(a.id<b.id)return-1;if(a.id>b.id)return 1;return 0}}]);function Segment(leftSE,rightSE,rings,windings){_classCallCheck(this,Segment);this.id=++segmentId;this.leftSE=leftSE;leftSE.segment=this;leftSE.otherSE=rightSE;this.rightSE=rightSE;rightSE.segment=this;rightSE.otherSE=leftSE;this.rings=rings;this.windings=windings}_createClass(Segment,[{key:"replaceRightSE",value:function replaceRightSE(newRightSE){this.rightSE=newRightSE;this.rightSE.segment=this;this.rightSE.otherSE=this.leftSE;this.leftSE.otherSE=this.rightSE}},{key:"bbox",value:function bbox(){var y1=this.leftSE.point.y;var y2=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:y1<y2?y1:y2},ur:{x:this.rightSE.point.x,y:y1>y2?y1:y2}}}},{key:"vector",value:function vector(){return{x:this.rightSE.point.x-this.leftSE.point.x,y:this.rightSE.point.y-this.leftSE.point.y}}},{key:"isAnEndpoint",value:function isAnEndpoint(pt){return pt.x===this.leftSE.point.x&&pt.y===this.leftSE.point.y||pt.x===this.rightSE.point.x&&pt.y===this.rightSE.point.y}},{key:"comparePoint",value:function comparePoint(point){if(this.isAnEndpoint(point))return 0;var lPt=this.leftSE.point;var rPt=this.rightSE.point;var v=this.vector();if(lPt.x===rPt.x){if(point.x===lPt.x)return 0;return point.x<lPt.x?1:-1}var yDist=(point.y-lPt.y)/v.y;var xFromYDist=lPt.x+yDist*v.x;if(point.x===xFromYDist)return 0;var xDist=(point.x-lPt.x)/v.x;var yFromXDist=lPt.y+xDist*v.y;if(point.y===yFromXDist)return 0;return point.y<yFromXDist?-1:1}},{key:"getIntersection",value:function getIntersection(other){var tBbox=this.bbox();var oBbox=other.bbox();var bboxOverlap=getBboxOverlap(tBbox,oBbox);if(bboxOverlap===null)return null;var tlp=this.leftSE.point;var trp=this.rightSE.point;var olp=other.leftSE.point;var orp=other.rightSE.point;var touchesOtherLSE=isInBbox(tBbox,olp)&&this.comparePoint(olp)===0;var touchesThisLSE=isInBbox(oBbox,tlp)&&other.comparePoint(tlp)===0;var touchesOtherRSE=isInBbox(tBbox,orp)&&this.comparePoint(orp)===0;var touchesThisRSE=isInBbox(oBbox,trp)&&other.comparePoint(trp)===0;if(touchesThisLSE&&touchesOtherLSE){if(touchesThisRSE&&!touchesOtherRSE)return trp;if(!touchesThisRSE&&touchesOtherRSE)return orp;return null}if(touchesThisLSE){if(touchesOtherRSE){if(tlp.x===orp.x&&tlp.y===orp.y)return null}return tlp}if(touchesOtherLSE){if(touchesThisRSE){if(trp.x===olp.x&&trp.y===olp.y)return null}return olp}if(touchesThisRSE&&touchesOtherRSE)return null;if(touchesThisRSE)return trp;if(touchesOtherRSE)return orp;var pt=intersection(tlp,this.vector(),olp,other.vector());if(pt===null)return null;if(!isInBbox(bboxOverlap,pt))return null;return rounder.round(pt.x,pt.y)}},{key:"split",value:function split(point){var newEvents=[];var alreadyLinked=point.events!==undefined;var newLeftSE=new SweepEvent(point,true);var newRightSE=new SweepEvent(point,false);var oldRightSE=this.rightSE;this.replaceRightSE(newRightSE);newEvents.push(newRightSE);newEvents.push(newLeftSE);var newSeg=new Segment(newLeftSE,oldRightSE,this.rings.slice(),this.windings.slice());if(SweepEvent.comparePoints(newSeg.leftSE.point,newSeg.rightSE.point)>0){newSeg.swapEvents()}if(SweepEvent.comparePoints(this.leftSE.point,this.rightSE.point)>0){this.swapEvents()}if(alreadyLinked){newLeftSE.checkForConsuming();newRightSE.checkForConsuming()}return newEvents}},{key:"swapEvents",value:function swapEvents(){var tmpEvt=this.rightSE;this.rightSE=this.leftSE;this.leftSE=tmpEvt;this.leftSE.isLeft=true;this.rightSE.isLeft=false;for(var i=0,iMax=this.windings.length;i<iMax;i++){this.windings[i]*=-1}}},{key:"consume",value:function consume(other){var consumer=this;var consumee=other;while(consumer.consumedBy){consumer=consumer.consumedBy}while(consumee.consumedBy){consumee=consumee.consumedBy}var cmp=Segment.compare(consumer,consumee);if(cmp===0)return;if(cmp>0){var tmp=consumer;consumer=consumee;consumee=tmp}if(consumer.prev===consumee){var _tmp=consumer;consumer=consumee;consumee=_tmp}for(var i=0,iMax=consumee.rings.length;i<iMax;i++){var ring=consumee.rings[i];var winding=consumee.windings[i];var index=consumer.rings.indexOf(ring);if(index===-1){consumer.rings.push(ring);consumer.windings.push(winding)}else consumer.windings[index]+=winding}consumee.rings=null;consumee.windings=null;consumee.consumedBy=consumer;consumee.leftSE.consumedBy=consumer.leftSE;consumee.rightSE.consumedBy=consumer.rightSE}},{key:"prevInResult",value:function prevInResult(){if(this._prevInResult!==undefined)return this._prevInResult;if(!this.prev)this._prevInResult=null;else if(this.prev.isInResult())this._prevInResult=this.prev;else this._prevInResult=this.prev.prevInResult();return this._prevInResult}},{key:"beforeState",value:function beforeState(){if(this._beforeState!==undefined)return this._beforeState;if(!this.prev)this._beforeState={rings:[],windings:[],multiPolys:[]};else{var seg=this.prev.consumedBy||this.prev;this._beforeState=seg.afterState()}return this._beforeState}},{key:"afterState",value:function afterState(){if(this._afterState!==undefined)return this._afterState;var beforeState=this.beforeState();this._afterState={rings:beforeState.rings.slice(0),windings:beforeState.windings.slice(0),multiPolys:[]};var ringsAfter=this._afterState.rings;var windingsAfter=this._afterState.windings;var mpsAfter=this._afterState.multiPolys;for(var i=0,iMax=this.rings.length;i<iMax;i++){var ring=this.rings[i];var winding=this.windings[i];var index=ringsAfter.indexOf(ring);if(index===-1){ringsAfter.push(ring);windingsAfter.push(winding)}else windingsAfter[index]+=winding}var polysAfter=[];var polysExclude=[];for(var _i=0,_iMax=ringsAfter.length;_i<_iMax;_i++){if(windingsAfter[_i]===0)continue;var _ring=ringsAfter[_i];var poly=_ring.poly;if(polysExclude.indexOf(poly)!==-1)continue;if(_ring.isExterior)polysAfter.push(poly);else{if(polysExclude.indexOf(poly)===-1)polysExclude.push(poly);var _index=polysAfter.indexOf(_ring.poly);if(_index!==-1)polysAfter.splice(_index,1)}}for(var _i2=0,_iMax2=polysAfter.length;_i2<_iMax2;_i2++){var mp=polysAfter[_i2].multiPoly;if(mpsAfter.indexOf(mp)===-1)mpsAfter.push(mp)}return this._afterState}},{key:"isInResult",value:function isInResult(){if(this.consumedBy)return false;if(this._isInResult!==undefined)return this._isInResult;var mpsBefore=this.beforeState().multiPolys;var mpsAfter=this.afterState().multiPolys;switch(operation.type){case"union":{var noBefores=mpsBefore.length===0;var noAfters=mpsAfter.length===0;this._isInResult=noBefores!==noAfters;break}case"intersection":{var least;var most;if(mpsBefore.length<mpsAfter.length){least=mpsBefore.length;most=mpsAfter.length}else{least=mpsAfter.length;most=mpsBefore.length}this._isInResult=most===operation.numMultiPolys&&least<most;break}case"xor":{var diff=Math.abs(mpsBefore.length-mpsAfter.length);this._isInResult=diff%2===1;break}case"difference":{var isJustSubject=function isJustSubject(mps){return mps.length===1&&mps[0].isSubject};this._isInResult=isJustSubject(mpsBefore)!==isJustSubject(mpsAfter);break}default:throw new Error("Unrecognized operation type found ".concat(operation.type))}return this._isInResult}}],[{key:"fromRing",value:function fromRing(pt1,pt2,ring){var leftPt,rightPt,winding;var cmpPts=SweepEvent.comparePoints(pt1,pt2);if(cmpPts<0){leftPt=pt1;rightPt=pt2;winding=1}else if(cmpPts>0){leftPt=pt2;rightPt=pt1;winding=-1}else throw new Error("Tried to create degenerate segment at [".concat(pt1.x,", ").concat(pt1.y,"]"));var leftSE=new SweepEvent(leftPt,true);var rightSE=new SweepEvent(rightPt,false);return new Segment(leftSE,rightSE,[ring],[winding])}}]);return Segment}();var RingIn=function(){function RingIn(geomRing,poly,isExterior){_classCallCheck(this,RingIn);if(!Array.isArray(geomRing)||geomRing.length===0){throw new Error("Input geometry is not a valid Polygon or MultiPolygon")}this.poly=poly;this.isExterior=isExterior;this.segments=[];if(typeof geomRing[0][0]!=="number"||typeof geomRing[0][1]!=="number"){throw new Error("Input geometry is not a valid Polygon or MultiPolygon")}var firstPoint=rounder.round(geomRing[0][0],geomRing[0][1]);this.bbox={ll:{x:firstPoint.x,y:firstPoint.y},ur:{x:firstPoint.x,y:firstPoint.y}};var prevPoint=firstPoint;for(var i=1,iMax=geomRing.length;i<iMax;i++){if(typeof geomRing[i][0]!=="number"||typeof geomRing[i][1]!=="number"){throw new Error("Input geometry is not a valid Polygon or MultiPolygon")}var point=rounder.round(geomRing[i][0],geomRing[i][1]);if(point.x===prevPoint.x&&point.y===prevPoint.y)continue;this.segments.push(Segment.fromRing(prevPoint,point,this));if(point.x<this.bbox.ll.x)this.bbox.ll.x=point.x;if(point.y<this.bbox.ll.y)this.bbox.ll.y=point.y;if(point.x>this.bbox.ur.x)this.bbox.ur.x=point.x;if(point.y>this.bbox.ur.y)this.bbox.ur.y=point.y;prevPoint=point}if(firstPoint.x!==prevPoint.x||firstPoint.y!==prevPoint.y){this.segments.push(Segment.fromRing(prevPoint,firstPoint,this))}}_createClass(RingIn,[{key:"getSweepEvents",value:function getSweepEvents(){var sweepEvents=[];for(var i=0,iMax=this.segments.length;i<iMax;i++){var segment=this.segments[i];sweepEvents.push(segment.leftSE);sweepEvents.push(segment.rightSE)}return sweepEvents}}]);return RingIn}();var PolyIn=function(){function PolyIn(geomPoly,multiPoly){_classCallCheck(this,PolyIn);if(!Array.isArray(geomPoly)){throw new Error("Input geometry is not a valid Polygon or MultiPolygon")}this.exteriorRing=new RingIn(geomPoly[0],this,true);this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}};this.interiorRings=[];for(var i=1,iMax=geomPoly.length;i<iMax;i++){var ring=new RingIn(geomPoly[i],this,false);if(ring.bbox.ll.x<this.bbox.ll.x)this.bbox.ll.x=ring.bbox.ll.x;if(ring.bbox.ll.y<this.bbox.ll.y)this.bbox.ll.y=ring.bbox.ll.y;if(ring.bbox.ur.x>this.bbox.ur.x)this.bbox.ur.x=ring.bbox.ur.x;if(ring.bbox.ur.y>this.bbox.ur.y)this.bbox.ur.y=ring.bbox.ur.y;this.interiorRings.push(ring)}this.multiPoly=multiPoly}_createClass(PolyIn,[{key:"getSweepEvents",value:function getSweepEvents(){var sweepEvents=this.exteriorRing.getSweepEvents();for(var i=0,iMax=this.interiorRings.length;i<iMax;i++){var ringSweepEvents=this.interiorRings[i].getSweepEvents();for(var j=0,jMax=ringSweepEvents.length;j<jMax;j++){sweepEvents.push(ringSweepEvents[j])}}return sweepEvents}}]);return PolyIn}();var MultiPolyIn=function(){function MultiPolyIn(geom,isSubject){_classCallCheck(this,MultiPolyIn);if(!Array.isArray(geom)){throw new Error("Input geometry is not a valid Polygon or MultiPolygon")}try{if(typeof geom[0][0][0]==="number")geom=[geom]}catch(ex){}this.polys=[];this.bbox={ll:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY},ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY}};for(var i=0,iMax=geom.length;i<iMax;i++){var poly=new PolyIn(geom[i],this);if(poly.bbox.ll.x<this.bbox.ll.x)this.bbox.ll.x=poly.bbox.ll.x;if(poly.bbox.ll.y<this.bbox.ll.y)this.bbox.ll.y=poly.bbox.ll.y;if(poly.bbox.ur.x>this.bbox.ur.x)this.bbox.ur.x=poly.bbox.ur.x;if(poly.bbox.ur.y>this.bbox.ur.y)this.bbox.ur.y=poly.bbox.ur.y;this.polys.push(poly)}this.isSubject=isSubject}_createClass(MultiPolyIn,[{key:"getSweepEvents",value:function getSweepEvents(){var sweepEvents=[];for(var i=0,iMax=this.polys.length;i<iMax;i++){var polySweepEvents=this.polys[i].getSweepEvents();for(var j=0,jMax=polySweepEvents.length;j<jMax;j++){sweepEvents.push(polySweepEvents[j])}}return sweepEvents}}]);return MultiPolyIn}();var RingOut=function(){_createClass(RingOut,null,[{key:"factory",value:function factory(allSegments){var ringsOut=[];for(var i=0,iMax=allSegments.length;i<iMax;i++){var segment=allSegments[i];if(!segment.isInResult()||segment.ringOut)continue;var prevEvent=null;var event=segment.leftSE;var nextEvent=segment.rightSE;var events=[event];var startingPoint=event.point;var intersectionLEs=[];while(true){prevEvent=event;event=nextEvent;events.push(event);if(event.point===startingPoint)break;while(true){var availableLEs=event.getAvailableLinkedEvents();if(availableLEs.length===0){var firstPt=events[0].point;var lastPt=events[events.length-1].point;throw new Error("Unable to complete output ring starting at [".concat(firstPt.x,",")+" ".concat(firstPt.y,"]. Last matching segment found ends at")+" [".concat(lastPt.x,", ").concat(lastPt.y,"]."))}if(availableLEs.length===1){nextEvent=availableLEs[0].otherSE;break}var indexLE=null;for(var j=0,jMax=intersectionLEs.length;j<jMax;j++){if(intersectionLEs[j].point===event.point){indexLE=j;break}}if(indexLE!==null){var intersectionLE=intersectionLEs.splice(indexLE)[0];var ringEvents=events.splice(intersectionLE.index);ringEvents.unshift(ringEvents[0].otherSE);ringsOut.push(new RingOut(ringEvents.reverse()));continue}intersectionLEs.push({index:events.length,point:event.point});var comparator=event.getLeftmostComparator(prevEvent);nextEvent=availableLEs.sort(comparator)[0].otherSE;break}}ringsOut.push(new RingOut(events))}return ringsOut}}]);function RingOut(events){_classCallCheck(this,RingOut);this.events=events;for(var i=0,iMax=events.length;i<iMax;i++){events[i].segment.ringOut=this}this.poly=null}_createClass(RingOut,[{key:"getGeom",value:function getGeom(){var prevPt=this.events[0].point;var points=[prevPt];for(var i=1,iMax=this.events.length-1;i<iMax;i++){var _pt=this.events[i].point;var _nextPt=this.events[i+1].point;if(compareVectorAngles(_pt,prevPt,_nextPt)===0)continue;points.push(_pt);prevPt=_pt}if(points.length===1)return null;var pt=points[0];var nextPt=points[1];if(compareVectorAngles(pt,prevPt,nextPt)===0)points.shift();points.push(points[0]);var step=this.isExteriorRing()?1:-1;var iStart=this.isExteriorRing()?0:points.length-1;var iEnd=this.isExteriorRing()?points.length:-1;var orderedPoints=[];for(var _i=iStart;_i!=iEnd;_i+=step){orderedPoints.push([points[_i].x,points[_i].y])}return orderedPoints}},{key:"isExteriorRing",value:function isExteriorRing(){if(this._isExteriorRing===undefined){var enclosing=this.enclosingRing();this._isExteriorRing=enclosing?!enclosing.isExteriorRing():true}return this._isExteriorRing}},{key:"enclosingRing",value:function enclosingRing(){if(this._enclosingRing===undefined){this._enclosingRing=this._calcEnclosingRing()}return this._enclosingRing}},{key:"_calcEnclosingRing",value:function _calcEnclosingRing(){var leftMostEvt=this.events[0];for(var i=1,iMax=this.events.length;i<iMax;i++){var evt=this.events[i];if(SweepEvent.compare(leftMostEvt,evt)>0)leftMostEvt=evt}var prevSeg=leftMostEvt.segment.prevInResult();var prevPrevSeg=prevSeg?prevSeg.prevInResult():null;while(true){if(!prevSeg)return null;if(!prevPrevSeg)return prevSeg.ringOut;if(prevPrevSeg.ringOut!==prevSeg.ringOut){if(prevPrevSeg.ringOut.enclosingRing()!==prevSeg.ringOut){return prevSeg.ringOut}else return prevSeg.ringOut.enclosingRing()}prevSeg=prevPrevSeg.prevInResult();prevPrevSeg=prevSeg?prevSeg.prevInResult():null}}}]);return RingOut}();var PolyOut=function(){function PolyOut(exteriorRing){_classCallCheck(this,PolyOut);this.exteriorRing=exteriorRing;exteriorRing.poly=this;this.interiorRings=[]}_createClass(PolyOut,[{key:"addInterior",value:function addInterior(ring){this.interiorRings.push(ring);ring.poly=this}},{key:"getGeom",value:function getGeom(){var geom=[this.exteriorRing.getGeom()];if(geom[0]===null)return null;for(var i=0,iMax=this.interiorRings.length;i<iMax;i++){var ringGeom=this.interiorRings[i].getGeom();if(ringGeom===null)continue;geom.push(ringGeom)}return geom}}]);return PolyOut}();var MultiPolyOut=function(){function MultiPolyOut(rings){_classCallCheck(this,MultiPolyOut);this.rings=rings;this.polys=this._composePolys(rings)}_createClass(MultiPolyOut,[{key:"getGeom",value:function getGeom(){var geom=[];for(var i=0,iMax=this.polys.length;i<iMax;i++){var polyGeom=this.polys[i].getGeom();if(polyGeom===null)continue;geom.push(polyGeom)}return geom}},{key:"_composePolys",value:function _composePolys(rings){var polys=[];for(var i=0,iMax=rings.length;i<iMax;i++){var ring=rings[i];if(ring.poly)continue;if(ring.isExteriorRing())polys.push(new PolyOut(ring));else{var enclosingRing=ring.enclosingRing();if(!enclosingRing.poly)polys.push(new PolyOut(enclosingRing));enclosingRing.poly.addInterior(ring)}}return polys}}]);return MultiPolyOut}();var SweepLine=function(){function SweepLine(queue){var comparator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Segment.compare;_classCallCheck(this,SweepLine);this.queue=queue;this.tree=new Tree(comparator);this.segments=[]}_createClass(SweepLine,[{key:"process",value:function process(event){var segment=event.segment;var newEvents=[];if(event.consumedBy){if(event.isLeft)this.queue.remove(event.otherSE);else this.tree.remove(segment);return newEvents}var node=event.isLeft?this.tree.insert(segment):this.tree.find(segment);if(!node)throw new Error("Unable to find segment #".concat(segment.id," ")+"[".concat(segment.leftSE.point.x,", ").concat(segment.leftSE.point.y,"] -> ")+"[".concat(segment.rightSE.point.x,", ").concat(segment.rightSE.point.y,"] ")+"in SweepLine tree. Please submit a bug report.");var prevNode=node;var nextNode=node;var prevSeg=undefined;var nextSeg=undefined;while(prevSeg===undefined){prevNode=this.tree.prev(prevNode);if(prevNode===null)prevSeg=null;else if(prevNode.key.consumedBy===undefined)prevSeg=prevNode.key}while(nextSeg===undefined){nextNode=this.tree.next(nextNode);if(nextNode===null)nextSeg=null;else if(nextNode.key.consumedBy===undefined)nextSeg=nextNode.key}if(event.isLeft){var prevMySplitter=null;if(prevSeg){var prevInter=prevSeg.getIntersection(segment);if(prevInter!==null){if(!segment.isAnEndpoint(prevInter))prevMySplitter=prevInter;if(!prevSeg.isAnEndpoint(prevInter)){var newEventsFromSplit=this._splitSafely(prevSeg,prevInter);for(var i=0,iMax=newEventsFromSplit.length;i<iMax;i++){newEvents.push(newEventsFromSplit[i])}}}}var nextMySplitter=null;if(nextSeg){var nextInter=nextSeg.getIntersection(segment);if(nextInter!==null){if(!segment.isAnEndpoint(nextInter))nextMySplitter=nextInter;if(!nextSeg.isAnEndpoint(nextInter)){var _newEventsFromSplit=this._splitSafely(nextSeg,nextInter);for(var _i=0,_iMax=_newEventsFromSplit.length;_i<_iMax;_i++){newEvents.push(_newEventsFromSplit[_i])}}}}if(prevMySplitter!==null||nextMySplitter!==null){var mySplitter=null;if(prevMySplitter===null)mySplitter=nextMySplitter;else if(nextMySplitter===null)mySplitter=prevMySplitter;else{var cmpSplitters=SweepEvent.comparePoints(prevMySplitter,nextMySplitter);mySplitter=cmpSplitters<=0?prevMySplitter:nextMySplitter}this.queue.remove(segment.rightSE);newEvents.push(segment.rightSE);var _newEventsFromSplit2=segment.split(mySplitter);for(var _i2=0,_iMax2=_newEventsFromSplit2.length;_i2<_iMax2;_i2++){newEvents.push(_newEventsFromSplit2[_i2])}}if(newEvents.length>0){this.tree.remove(segment);newEvents.push(event)}else{this.segments.push(segment);segment.prev=prevSeg}}else{if(prevSeg&&nextSeg){var inter=prevSeg.getIntersection(nextSeg);if(inter!==null){if(!prevSeg.isAnEndpoint(inter)){var _newEventsFromSplit3=this._splitSafely(prevSeg,inter);for(var _i3=0,_iMax3=_newEventsFromSplit3.length;_i3<_iMax3;_i3++){newEvents.push(_newEventsFromSplit3[_i3])}}if(!nextSeg.isAnEndpoint(inter)){var _newEventsFromSplit4=this._splitSafely(nextSeg,inter);for(var _i4=0,_iMax4=_newEventsFromSplit4.length;_i4<_iMax4;_i4++){newEvents.push(_newEventsFromSplit4[_i4])}}}}this.tree.remove(segment)}return newEvents}},{key:"_splitSafely",value:function _splitSafely(seg,pt){this.tree.remove(seg);var rightSE=seg.rightSE;this.queue.remove(rightSE);var newEvents=seg.split(pt);newEvents.push(rightSE);if(seg.consumedBy===undefined)this.tree.insert(seg);return newEvents}}]);return SweepLine}();var POLYGON_CLIPPING_MAX_QUEUE_SIZE=typeof process!=="undefined"&&process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE||1e6;var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS=typeof process!=="undefined"&&process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS||1e6;var Operation=function(){function Operation(){_classCallCheck(this,Operation)}_createClass(Operation,[{key:"run",value:function run(type,geom,moreGeoms){operation.type=type;rounder.reset();var multipolys=[new MultiPolyIn(geom,true)];for(var i=0,iMax=moreGeoms.length;i<iMax;i++){multipolys.push(new MultiPolyIn(moreGeoms[i],false))}operation.numMultiPolys=multipolys.length;if(operation.type==="difference"){var subject=multipolys[0];var _i=1;while(_i<multipolys.length){if(getBboxOverlap(multipolys[_i].bbox,subject.bbox)!==null)_i++;else multipolys.splice(_i,1)}}if(operation.type==="intersection"){for(var _i2=0,_iMax=multipolys.length;_i2<_iMax;_i2++){var mpA=multipolys[_i2];for(var j=_i2+1,jMax=multipolys.length;j<jMax;j++){if(getBboxOverlap(mpA.bbox,multipolys[j].bbox)===null)return[]}}}var queue=new Tree(SweepEvent.compare);for(var _i3=0,_iMax2=multipolys.length;_i3<_iMax2;_i3++){var sweepEvents=multipolys[_i3].getSweepEvents();for(var _j=0,_jMax=sweepEvents.length;_j<_jMax;_j++){queue.insert(sweepEvents[_j]);if(queue.size>POLYGON_CLIPPING_MAX_QUEUE_SIZE){throw new Error("Infinite loop when putting segment endpoints in a priority queue "+"(queue size too big). Please file a bug report.")}}}var sweepLine=new SweepLine(queue);var prevQueueSize=queue.size;var node=queue.pop();while(node){var evt=node.key;if(queue.size===prevQueueSize){var seg=evt.segment;throw new Error("Unable to pop() ".concat(evt.isLeft?"left":"right"," SweepEvent ")+"[".concat(evt.point.x,", ").concat(evt.point.y,"] from segment #").concat(seg.id," ")+"[".concat(seg.leftSE.point.x,", ").concat(seg.leftSE.point.y,"] -> ")+"[".concat(seg.rightSE.point.x,", ").concat(seg.rightSE.point.y,"] from queue. ")+"Please file a bug report.")}if(queue.size>POLYGON_CLIPPING_MAX_QUEUE_SIZE){throw new Error("Infinite loop when passing sweep line over endpoints "+"(queue size too big). Please file a bug report.")}if(sweepLine.segments.length>POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS){throw new Error("Infinite loop when passing sweep line over endpoints "+"(too many sweep line segments). Please file a bug report.")}var newEvents=sweepLine.process(evt);for(var _i4=0,_iMax3=newEvents.length;_i4<_iMax3;_i4++){var _evt=newEvents[_i4];if(_evt.consumedBy===undefined)queue.insert(_evt)}prevQueueSize=queue.size;node=queue.pop()}rounder.reset();var ringsOut=RingOut.factory(sweepLine.segments);var result=new MultiPolyOut(ringsOut);return result.getGeom()}}]);return Operation}();var operation=new Operation;var union=function union(geom){for(var _len=arguments.length,moreGeoms=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){moreGeoms[_key-1]=arguments[_key]}return operation.run("union",geom,moreGeoms)};var intersection$1=function intersection(geom){for(var _len2=arguments.length,moreGeoms=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){moreGeoms[_key2-1]=arguments[_key2]}return operation.run("intersection",geom,moreGeoms)};var xor=function xor(geom){for(var _len3=arguments.length,moreGeoms=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){moreGeoms[_key3-1]=arguments[_key3]}return operation.run("xor",geom,moreGeoms)};var difference=function difference(subjectGeom){for(var _len4=arguments.length,clippingGeoms=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++){clippingGeoms[_key4-1]=arguments[_key4]}return operation.run("difference",subjectGeom,clippingGeoms)};var index={union:union,intersection:intersection$1,xor:xor,difference:difference};return index})}).call(this)}).call(this,require("_process"))},{_process:1}]},{},[2])(2)});
